events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    # Your custom server block goes here
    server {
        listen 80;

        # Serve frontend files from this location
        location / {
            root /usr/share/nginx/html;
            try_files $uri /index.html;
            add_header Content-Type video/mp4;
            add_header Content-Type application/json;

           
        }

        # Reverse proxy to FastAPI backend
        location /api/ {
            proxy_pass http://backend:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            add_header Content-Type application/json;
            add_header Content-Type video/mp4;
            add_header 'Access-Control-Allow-Origin' 'http://frontend:80';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
            
            # CORS headers
        }

        # Handle CORS preflight requests
        
    }
}